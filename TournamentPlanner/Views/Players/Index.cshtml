@using Microsoft.AspNetCore.Identity
@using TournamentPlanner.DAL.Entities
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@model IEnumerable<TournamentPlanner.Models.PlayerViewModel>

@{
    ViewData["Title"] = "Index";
}

@if(User.Identity.IsAuthenticated)
{
    <p>@User.Identity.Name</p>
 
    <form method="post" asp-controller="Account" asp-action="Logout">
        <input type="submit" value="Log out" />
    </form>
}
else
{
    <a asp-controller="Account" asp-action="Login">Log in</a>
    <a asp-controller="Account" asp-action="Register">Sign in</a>
}

<h1>List of players</h1>
@if (User.IsInRole("admin"))
{
    <p>
        <a class="btn btn-outline-primary" href="/Players/Create">Create player</a>
        <a class="btn btn-outline-success" style="float:right" href="/Players/BatchPlayerUpload">Import from Excel</a>
        <a class="btn btn-outline-success" style="float:right" href="/Players/ExportToExcel">Export</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @*@if(SignInManager.IsSignedIn(User))*@
                <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                @if (User.IsInRole("admin"))
                {
                    <a asp-action="Edit" asp-route-id="@item.Id">| Edit |</a>
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                }   
            </td>
        </tr>
}
    </tbody>
</table>



