// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TournamentPlanner.DAL.EF;

namespace DAL.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20220126102810_Test1")]
    partial class Test1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TournamentPlanner.DAL.Entities.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Meteor"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Dynamo"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Wave"
                        });
                });

            modelBuilder.Entity("TournamentPlanner.DAL.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("EntryMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 0,
                            ClubId = 1,
                            FirstName = "Valeriy"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 0,
                            ClubId = 1,
                            FirstName = "Anton"
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 0,
                            ClubId = 2,
                            FirstName = "Elena"
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 0,
                            ClubId = 3,
                            FirstName = "Kateryna"
                        },
                        new
                        {
                            Id = 5,
                            AddressId = 0,
                            ClubId = 3,
                            FirstName = "Sergey"
                        });
                });

            modelBuilder.Entity("TournamentPlanner.DAL.Entities.Player", b =>
                {
                    b.HasOne("TournamentPlanner.DAL.Entities.Club", "Club")
                        .WithMany("Clubs")
                        .HasForeignKey("ClubId");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("TournamentPlanner.DAL.Entities.Club", b =>
                {
                    b.Navigation("Clubs");
                });
#pragma warning restore 612, 618
        }
    }
}
